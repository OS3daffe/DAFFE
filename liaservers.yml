---
- hosts: liaservers
  tasks:

    - name: Install 3.16 kernel
      yum: name=https://kojipkgs.fedoraproject.org//packages/kernel/3.16.7/200.fc20/x86_64/kernel-3.16.7-200.fc20.x86_64.rpm state=present

    - name: Install 3.16 kernel headers
      yum: name=https://kojipkgs.fedoraproject.org//packages/kernel/3.16.7/200.fc20/x86_64/kernel-headers-3.16.7-200.fc20.x86_64.rpm state=present

    - name: Install 3.16 kernel devel
      yum: name=https://kojipkgs.fedoraproject.org//packages/kernel/3.16.7/200.fc20/x86_64/kernel-devel-3.16.7-200.fc20.x86_64.rpm state=present

    - name: Ensure yum is updated
      tags: update
      command: yum update -y --skip-broken --exclude=kernel*
      sudo: yes

    - name: Install Python
      yum: name=python state=latest

    - name: Install VIM
      yum: name=wget state=latest

    - name: Install GIT
      tags: git
      yum: name=git state=latest

    - name: Install GCC
      tags: gcc
      yum: name=gcc state=latest

    - name: Install htop
      tags: htop
      yum: name=htop state=latest

    - name: Install time
      tags: time
      yum: name=time state=latest

    - name: Install fish shell
      command: "{{item}} creates=/usr/bin/fish"
      with_items:
      - cd /etc/yum.repos.d/
      - wget http://download.opensuse.org/repositories/shells:fish:release:2/Fedora_20/shells:fish:release:2.repo
      - yum install -y fish
      sudo: yes

    - name: Install python-virtualenv
      yum: name=python-virtualenv state=latest

    - name: Install python-devel
      yum: name=python-devel state=latest

    - name: Download Flocker Node
      tags: flocker-node
      command: "{{item}} creates=/usr/bin/flocker-serve"
      with_items:
      - yum install -y https://s3.amazonaws.com/archive.zfsonlinux.org/fedora/zfs-release$(rpm -E %dist).noarch.rpm
      - yum install -y http://archive.clusterhq.com/fedora/clusterhq-release$(rpm -E %dist).noarch.rpm
      - yum install -y flocker-node
      sudo: yes

    - name: Enable and run Docker
      service: name=docker enabled=yes state=started

    - name: Configure firewall
      command: "{{item}} creates=/home/ansible/firewall_done"
      with_items:
      - firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -j ACCEPT
      - firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -j ACCEPT
      - touch /home/ansible/firewall_done
      sudo: yes

    - name: Configure ZFS
      tags: zfs
      command: "{{item}} creates=/home/ansible/zfs_done"
      with_items:
      - mkdir /opt/flocker
      - truncate --size 10G /opt/flocker/pool-vdev
      - zpool create flocker /opt/flocker/pool-vdev
      - touch /home/ansible/zfs_done
      sudo: yes

    - name: Docker images
      tags: docker-images
      command: "docker pull {{item}}"
      with_items:
      - daffe/daffedummy
      - clusterhq/logstash
      - clusterhq/elasticsearch
      - clusterhq/kibana
      - clusterhq/mongodb
      sudo: yes

    - name: Install Mongo-org repository
      tags: mongodb
      command: 'echo -e "[mongodb-org-2.6]\nname=MongoDB 2.6 Repository\nbaseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/\ngpgcheck=0\nenabled=1\n" > /etc/yum.repos.d/mongodb-org-2.6.repo creates=/etc/yum.repos.d/mongodb-org-2.6.repo'
      sudo: yes

    - name: Install MongoDB shell
      tags: mongodb
      yum: name=mongodb-org-shell state=latest

    - name: Install MongoDB tools
      tags: mongodb
      yum: name=mongodb-org-tools state=latest

#    - name: Disable SELinux
#      tags: firewall
#      command: "setenforce 0"
#      sudo: yes

#    - name: Disable Firewall
#      tags: firewall
#      command: "iptables -F"
#      sudo: yes

    - name: Install SSH keys
      tags: ssh
      authorized_key: user=root key="{{ lookup('file', 'keys.pub') }}"

    - name: Destroy data
      tags: destroy
      command: "{{item}}"
      with_items:
#      - docker rm -f $(docker ps -aq)
      - zpool destroy flocker
      - rm -rf /flocker
      - zpool create flocker /opt/flocker/pool-vdev
      - sudo truncate --size 30G /opt/flocker/pool-vdev
      sudo: yes
